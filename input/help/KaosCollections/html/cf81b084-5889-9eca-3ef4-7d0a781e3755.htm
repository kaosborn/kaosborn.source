<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RankedSet(T).CreateSetComparer Method </title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Kaos.Collections.RankedSet`1.CreateSetComparer" /><meta name="Description" content="Returns an equality comparer that can be used to create a collection that contains sets." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Kaos.Collections" /><meta name="file" content="cf81b084-5889-9eca-3ef4-7d0a781e3755" /><meta name="guid" content="cf81b084-5889-9eca-3ef4-7d0a781e3755" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Kaos.Collections Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad.htm" title="Kaos.Collections Library" tocid="roottoc">Kaos.Collections Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm" title="Kaos.Collections" tocid="ea382f9d-d870-8b02-657d-aa381c4ea035">Kaos.Collections</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm" title="RankedSet(T) Class" tocid="d595b6a0-2eaa-166f-3420-098e987e7c30">RankedSet(T) Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d4f7b95c-0068-8623-3a97-3d814f999b21.htm" title="RankedSet(T) Methods" tocid="d4f7b95c-0068-8623-3a97-3d814f999b21">RankedSet(T) Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1f317165-cd9e-1a22-dada-87a57893fd5f.htm" title="CreateSetComparer Method " tocid="1f317165-cd9e-1a22-dada-87a57893fd5f">CreateSetComparer Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="cf81b084-5889-9eca-3ef4-7d0a781e3755.htm" title="CreateSetComparer Method " tocid="cf81b084-5889-9eca-3ef4-7d0a781e3755">CreateSetComparer Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4e600f6c-ca39-c4d5-c882-b72404de877e.htm" title="CreateSetComparer Method (IEqualityComparer(T))" tocid="4e600f6c-ca39-c4d5-c882-b72404de877e">CreateSetComparer Method (IEqualityComparer(T))</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/KaosCollections-Help.png" /></td><td class="titleColumn"><h1>RankedSet<span id="LST22D7C3F4_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LST22D7C3F4_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST22D7C3F4_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_2?cpp=::|nu=.");</script>CreateSetComparer Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">Returns an equality comparer that can be used to create a collection that contains sets.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm">Kaos.Collections</a><br />
    <strong>Assembly:</strong>
   KaosCollections (in KaosCollections.dll) Version: 3.1.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">IEqualityComparer</span>&lt;<span class="identifier">RankedSet</span>&lt;T&gt;&gt; <span class="identifier">CreateSetComparer</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/ms132151" target="_blank">IEqualityComparer</a><span id="LST22D7C3F4_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm">RankedSet</a><span id="LST22D7C3F4_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm"><span class="typeparameter">T</span></a><span id="LST22D7C3F4_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST22D7C3F4_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />An equality comparer for creating a collection of sets.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> Kaos.Collections;

<span class="highlight-keyword">namespace</span> ChartApp
{
    <span class="highlight-keyword">class</span> RsExample06
    {
        <span class="highlight-keyword">static</span> <span class="highlight-keyword">bool</span> IsMononymous (<span class="highlight-keyword">string</span> name) =&gt; ! name.Contains (<span class="highlight-literal">" "</span>);

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-keyword">var</span> names1 = <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[] { <span class="highlight-literal">"Falco"</span>, <span class="highlight-literal">"Nico"</span>, <span class="highlight-literal">"David Bowie"</span>, <span class="highlight-literal">"Tom Petty"</span>, <span class="highlight-literal">"Joni Mitchell"</span>, <span class="highlight-literal">"Warren Zevon"</span> };
            <span class="highlight-keyword">var</span> names2 = <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[] { <span class="highlight-literal">"Michelangelo"</span>, <span class="highlight-literal">"Rembrandt"</span>, <span class="highlight-literal">"Joni Mitchell"</span>, <span class="highlight-literal">"David Bowie"</span> };

            <span class="highlight-keyword">var</span> musicians = <span class="highlight-keyword">new</span> RankedSet&lt;<span class="highlight-keyword">string</span>&gt; (names1);

            <span class="highlight-comment">// Remove mononymous items.</span>
            Console.WriteLine (<span class="highlight-literal">"Remove single names from the set..."</span>);
            Console.WriteLine (<span class="highlight-literal">"  Count before: "</span> + musicians.Count);
            musicians.RemoveWhere (IsMononymous);
            Console.WriteLine (<span class="highlight-literal">"  Count after: "</span> + musicians.Count + <span class="highlight-literal">"\n"</span>);

            <span class="highlight-comment">// List names starting with 'J'.</span>
            Console.WriteLine (<span class="highlight-literal">"Musicians J-T"</span>);
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> name <span class="highlight-keyword">in</span> musicians.ElementsBetween (<span class="highlight-literal">"J"</span>, <span class="highlight-literal">"U"</span>))
                Console.WriteLine (<span class="highlight-literal">"  "</span> + name);

            <span class="highlight-comment">// Create another RankedSet.</span>
            <span class="highlight-keyword">var</span> painters = <span class="highlight-keyword">new</span> RankedSet&lt;<span class="highlight-keyword">string</span>&gt; (names2);

            <span class="highlight-comment">// Remove elements in musicians that are also in painters.</span>
            Console.WriteLine (<span class="highlight-literal">"\nRemove duplicates (of painters) from the musicians..."</span>);
            Console.WriteLine (<span class="highlight-literal">"  Count before: "</span> + musicians.Count);
            musicians.ExceptWith (painters);
            Console.WriteLine (<span class="highlight-literal">"  Count after: "</span> + musicians.Count + <span class="highlight-literal">"\n"</span>);

            Console.WriteLine (<span class="highlight-literal">"List of musicians that are not painters:"</span>);
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">string</span> name <span class="highlight-keyword">in</span> musicians)
                Console.WriteLine (<span class="highlight-literal">"  "</span> + name);

            <span class="highlight-keyword">var</span> comp = RankedSet&lt;<span class="highlight-keyword">string</span>&gt;.CreateSetComparer();

            HashSet&lt;RankedSet&lt;<span class="highlight-keyword">string</span>&gt;&gt; setOfSets = <span class="highlight-keyword">new</span> HashSet&lt;RankedSet&lt;<span class="highlight-keyword">string</span>&gt;&gt; (comp);
            setOfSets.Add (musicians);
            setOfSets.Add (painters);

            Console.WriteLine (<span class="highlight-literal">"\nAll sets in hash set:"</span>);
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> <span class="highlight-keyword">set</span> <span class="highlight-keyword">in</span> setOfSets)
            {
                Console.WriteLine (<span class="highlight-literal">"  "</span> + <span class="highlight-keyword">set</span>.Count + <span class="highlight-literal">" items:"</span>);
                <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> item <span class="highlight-keyword">in</span> <span class="highlight-keyword">set</span>)
                    Console.WriteLine (<span class="highlight-literal">"    "</span> + item);
            }

            <span class="highlight-comment">// Create a 3rd RankedSet.</span>
            <span class="highlight-keyword">var</span> people = <span class="highlight-keyword">new</span> RankedSet&lt;<span class="highlight-keyword">string</span>&gt; (<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[] { <span class="highlight-literal">"Tom Petty"</span>, <span class="highlight-literal">"Warren Zevon"</span> });

            <span class="highlight-comment">// Create a set equality comparer.</span>
            <span class="highlight-keyword">var</span> comparer = RankedSet&lt;<span class="highlight-keyword">string</span>&gt;.CreateSetComparer();

            Console.WriteLine (<span class="highlight-literal">"\nSet comparison 1: "</span> + comparer.Equals (musicians, people));
            Console.WriteLine (<span class="highlight-literal">"Set comparison 2: "</span> + comparer.Equals (painters, people));
        }

        <span class="highlight-comment">/* Output:

        Remove single names from the set...
          Count before: 6
          Count after: 4

        Musicians J-T
          Joni Mitchell
          Tom Petty

        Remove duplicates (of painters) from the musicians...
          Count before: 4
          Count after: 2

        List of musicians that are not painters:
          Tom Petty
          Warren Zevon

        All sets in bag:
          2 items:
            Tom Petty
            Warren Zevon
          4 items:
            David Bowie
            Joni Mitchell
            Michelangelo
            Rembrandt

        Set comparison 1: True
        Set comparison 2: False

        */</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm">RankedSet<span id="LST22D7C3F4_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST22D7C3F4_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST22D7C3F4_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script> Class</a></div><div class="seeAlsoStyle"><a href="1f317165-cd9e-1a22-dada-87a57893fd5f.htm">CreateSetComparer Overload</a></div><div class="seeAlsoStyle"><a href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm">Kaos.Collections Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>[v3.1.0.0] Copyright © 2009-2017 Kasey O. (github.com/kaosborn)</p> </div></body></html>