<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RankedSet(T) Constructor (IComparer(T))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Kaos.Collections.RankedSet`1.#ctor(System.Collections.Generic.IComparer{`0})" /><meta name="Description" content="Initializes a new set instance that uses the supplied comparer." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Kaos.Collections" /><meta name="file" content="4de022d4-2dbb-f23b-234d-01b60a85d371" /><meta name="guid" content="4de022d4-2dbb-f23b-234d-01b60a85d371" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Kaos.Collections Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad.htm" title="Kaos.Collections Library" tocid="roottoc">Kaos.Collections Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm" title="Kaos.Collections" tocid="ea382f9d-d870-8b02-657d-aa381c4ea035">Kaos.Collections</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm" title="RankedSet(T) Class" tocid="d595b6a0-2eaa-166f-3420-098e987e7c30">RankedSet(T) Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6f065074-d484-ffdc-cfb4-c37ac5faec63.htm" title="RankedSet(T) Constructor " tocid="6f065074-d484-ffdc-cfb4-c37ac5faec63">RankedSet(T) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0016b7fc-30fe-9dfc-b87d-4705b7fdc06b.htm" title="RankedSet(T) Constructor " tocid="0016b7fc-30fe-9dfc-b87d-4705b7fdc06b">RankedSet(T) Constructor </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="4de022d4-2dbb-f23b-234d-01b60a85d371.htm" title="RankedSet(T) Constructor (IComparer(T))" tocid="4de022d4-2dbb-f23b-234d-01b60a85d371">RankedSet(T) Constructor (IComparer(T))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7ec3e181-a35f-4082-fad2-7cb3328360f6.htm" title="RankedSet(T) Constructor (IEnumerable(T))" tocid="7ec3e181-a35f-4082-fad2-7cb3328360f6">RankedSet(T) Constructor (IEnumerable(T))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7e97b2eb-e689-9b84-d4dc-c5a822386201.htm" title="RankedSet(T) Constructor (IEnumerable(T), IComparer(T))" tocid="7e97b2eb-e689-9b84-d4dc-c5a822386201">RankedSet(T) Constructor (IEnumerable(T), IComparer(T))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ebc7b356-6593-036a-346a-a8d5ede45a01.htm" title="RankedSet(T) Constructor (SerializationInfo, StreamingContext)" tocid="ebc7b356-6593-036a-346a-a8d5ede45a01">RankedSet(T) Constructor (SerializationInfo, StreamingContext)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/KaosCollections-Help.png" /></td><td class="titleColumn"><h1>RankedSet<span id="LST14EA2D9C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LST14EA2D9C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Constructor (IComparer<span id="LST14EA2D9C_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LST14EA2D9C_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Initializes a new set instance that uses the supplied comparer.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm">Kaos.Collections</a><br />
    <strong>Assembly:</strong>
   KaosCollections (in KaosCollections.dll) Version: 3.0.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">RankedSet</span>(
	<span class="identifier">IComparer</span>&lt;T&gt; <span class="parameter">comparer</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">comparer</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/8ehhxeaf" target="_blank">System.Collections.Generic<span id="LST14EA2D9C_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IComparer</a><span id="LST14EA2D9C_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm"><span class="typeparameter">T</span></a><span id="LST14EA2D9C_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />The comparer to use for sorting items.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/2asft85a" target="_blank">InvalidOperationException</a></td><td>When <em>comparer</em> is <b>null</b> and no other comparer available.</td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection">
            This program shows usage of a custom comparer combined with serialization.
            Note: Serialization is not supported in .NET Standard 1.0.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Runtime.Serialization;
<span class="highlight-keyword">using</span> System.Runtime.Serialization.Formatters.Binary;
<span class="highlight-keyword">using</span> Kaos.Collections;

<span class="highlight-keyword">namespace</span> ExampleApp
{
    [Serializable]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> PersonComparer : Comparer&lt;Person&gt;
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">int</span> Compare (Person x, Person y)
        { <span class="highlight-keyword">return</span> x==<span class="highlight-keyword">null</span>? (y==<span class="highlight-keyword">null</span>? <span class="highlight-number">0</span> : <span class="highlight-number">-1</span>) : (y==<span class="highlight-keyword">null</span>? <span class="highlight-number">1</span> : String.Compare (x.ToString(), y.ToString())); }
    }

    [Serializable]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Person : ISerializable
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> First { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Last { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }

        <span class="highlight-keyword">public</span> Person (<span class="highlight-keyword">string</span> first, <span class="highlight-keyword">string</span> last)
        { <span class="highlight-keyword">this</span>.First = first; <span class="highlight-keyword">this</span>.Last = last; }

        <span class="highlight-keyword">protected</span> Person (SerializationInfo info, StreamingContext context)
        {
            <span class="highlight-keyword">this</span>.First = (String) info.GetValue (<span class="highlight-literal">"First"</span>, <span class="highlight-keyword">typeof</span> (String));
            <span class="highlight-keyword">this</span>.Last = (String) info.GetValue (<span class="highlight-literal">"Last"</span>, <span class="highlight-keyword">typeof</span> (String));
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">void</span> GetObjectData (SerializationInfo info, StreamingContext context)
        {
            info.AddValue (<span class="highlight-literal">"First"</span>, First, <span class="highlight-keyword">typeof</span> (String));
            info.AddValue (<span class="highlight-literal">"Last"</span>, Last, <span class="highlight-keyword">typeof</span> (String));
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> ToString() =&gt; Last + <span class="highlight-literal">", "</span> + First;
    }


    <span class="highlight-keyword">class</span> RsExample05
    {
        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-keyword">var</span> set1 = <span class="highlight-keyword">new</span> RankedSet&lt;Person&gt; (<span class="highlight-keyword">new</span> PersonComparer());
            set1.Add (<span class="highlight-keyword">new</span> Person (<span class="highlight-literal">"Hugh"</span>, <span class="highlight-literal">"Mann"</span>));
            set1.Add (<span class="highlight-keyword">new</span> Person (<span class="highlight-literal">"Hammond"</span>, <span class="highlight-literal">"Egger"</span>));

            <span class="highlight-keyword">string</span> fileName = <span class="highlight-literal">"Persons.bin"</span>;
            IFormatter formatter = <span class="highlight-keyword">new</span> BinaryFormatter();

            SerializePersons (fileName, set1, formatter);
            Console.WriteLine (<span class="highlight-literal">"Wrote "</span> + set1.Count + <span class="highlight-literal">" items to file '"</span> + fileName + <span class="highlight-literal">"'."</span>);
            Console.WriteLine ();

            RankedSet&lt;Person&gt; set2 = DeserializePersons (fileName, formatter);
            Console.WriteLine (<span class="highlight-literal">"Read back "</span> + set2.Count + <span class="highlight-literal">" items:"</span>);

            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> p2 <span class="highlight-keyword">in</span> set2)
                Console.WriteLine (p2);
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> SerializePersons (<span class="highlight-keyword">string</span> fn, RankedSet&lt;Person&gt; <span class="highlight-keyword">set</span>, IFormatter formatter)
        {
            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> fs = <span class="highlight-keyword">new</span> FileStream (fn, FileMode.Create))
            { formatter.Serialize (fs, <span class="highlight-keyword">set</span>); }
        }

        <span class="highlight-keyword">static</span> RankedSet&lt;Person&gt; DeserializePersons (<span class="highlight-keyword">string</span> fn, IFormatter formatter)
        {
            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> fs = <span class="highlight-keyword">new</span> FileStream (fn, FileMode.Open))
            { <span class="highlight-keyword">return</span> (RankedSet&lt;Person&gt;) formatter.Deserialize (fs); }
        }

        <span class="highlight-comment">/* Output:

        Wrote 2 items to file 'Persons.bin'.

        Read back 2 items:
        Egger, Hammond
        Mann, Hugh

        */</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm">RankedSet<span id="LST14EA2D9C_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST14EA2D9C_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script> Class</a></div><div class="seeAlsoStyle"><a href="6f065074-d484-ffdc-cfb4-c37ac5faec63.htm">RankedSet<span id="LST14EA2D9C_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_9?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST14EA2D9C_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST14EA2D9C_10?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script> Overload</a></div><div class="seeAlsoStyle"><a href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm">Kaos.Collections Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>[v3.0.0] Copyright © 2009-2017 Kasey O. (github.com/kaosborn)</p> </div></body></html>