<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Welcome to KaosCollections</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Welcome" /><meta name="Microsoft.Help.Id" content="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad" /><meta name="Description" content="The KaosCollections library contains classes that work alongside the N:System.Collections.Generic classes. The primary classes are:" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Kaos.Collections Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad.htm" title="Kaos.Collections Library" tocid="roottoc">Kaos.Collections Library</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad.htm" title="Welcome to KaosCollections" tocid="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad">Welcome to KaosCollections</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="90402bce-1f31-45f8-b0ea-0a73408bd45a.htm" title="Version History" tocid="90402bce-1f31-45f8-b0ea-0a73408bd45a">Version History</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ea382f9d-d870-8b02-657d-aa381c4ea035.htm" title="Kaos.Collections" tocid="ea382f9d-d870-8b02-657d-aa381c4ea035">Kaos.Collections</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Welcome to KaosCollections</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>
        The KaosCollections library contains classes that work alongside the
        <a href="http://msdn2.microsoft.com/en-us/library/0sbxh9x2" target="_blank">System.Collections.Generic</a>
        classes. The primary classes are:
      </p><ul><li><p><a href="b25600ae-c427-957a-65ba-831d18b0c003.htm">RankedDictionary<span id="LST24FB78F9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST24FB78F9_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>-
            <a href="http://msdn2.microsoft.com/en-us/library/f7fta44c" target="_blank">SortedDictionary<span id="LST24FB78F9_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST24FB78F9_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> merged with
            <a href="http://msdn2.microsoft.com/en-us/library/ms132319" target="_blank">SortedList<span id="LST24FB78F9_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST24FB78F9_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> plus enhancements and improved performance.
          </p></li><li><p><a href="d595b6a0-2eaa-166f-3420-098e987e7c30.htm">RankedSet<span id="LST24FB78F9_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST24FB78F9_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>- an enhanced version of
            <a href="http://msdn2.microsoft.com/en-us/library/dd412070" target="_blank">SortedSet<span id="LST24FB78F9_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST24FB78F9_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24FB78F9_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
          </p></li></ul><p>
        All provided classes closely emulate the API of the Microsoft's classes
        while extending capability and improving performance in many common scenarios.
        Both these classes add array-like functionality so that any element can be accessed by index
        or the index of an element may be determined from the element's key.
      </p><p>
        The performance bump is due to the B+ tree variant used by KaosCollections.
        The structure used by <span class="code">SortedDictionary</span> and <span class="code">SortedSet</span> is a binary tree
        which greatly increases tree height and number of allocations compared to a B+ tree.
        Also in a B+ tree, data is grouped together in leaves which improves performance due to data locality.
      </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />API differences between System.Collections.Generic and Kaos.Collections</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
          The APIs of <span class="code">RankedDictionary</span> and <span class="code">RankedSet</span> closely adhere to Microsoft's related generic classes with a few exceptions:
        </p><ul><li><p><span class="code">RankedDictionary</span> is enhanced with properties borrowed from <span class="code">SortedSet</span>:
            </p><ul><li><p>
                  Adds <span class="code">Min</span> that returns the minimum key in the dictionary.
                </p></li><li><p>
                  Adds <span class="code">Max</span> that returns the maximum key in the dictionary.
                </p></li><li><p>
                  Adds <span class="code">Reverse()</span> that returns an enumerator of elements from maximum to minimum.
                </p></li><li><p>
                  Adds <span class="code">RemoveWhere()</span> that removes all elements that meet a supplied condition.
                </p></li></ul></li><li><p><span class="code">RankedDictionary</span> is enhanced with methods borrowed from <span class="code">SortedList</span>:</p><ul><li><p>Adds <span class="code">IndexOfKey(key)</span> that returns the position of the element with the supplied key.</p></li><li><p>Adds <span class="code">IndexOfValue(value)</span> that returns the position of the first element with the supplied value.</p></li><li><p>Adds <span class="code">RemoveAt(index)</span> that deletes the element at the supplied position.</p></li></ul></li><li><p><span class="code">RankedDictionary</span> and <span class="code">RankedSet</span> directly implement <span class="code">IEnumerable&lt;T&gt;</span> methods to improve performance:</p><ul><li><p>Implements <span class="code">ElementAt(index)</span> that returns the element at the supplied position.</p></li><li><p>Implements <span class="code">ElementAtOrDefault(index)</span> that returns the element at the supplied position or the default if past the end of the collection.</p></li><li><p>Implements <span class="code">Last()</span> that returns the element at the last position.</p></li></ul></li><li><p><span class="code">RankedDictionary</span> and <span class="code">RankedSet</span> add enumerators for range query support:</p><ul><li><p>
                  Adds <span class="code">ElementsBetween(lower,upper)</span> for elements beginning and ending at the supplied values.
                </p></li><li><p>
                  Adds <span class="code">ElementsFrom(lower)</span> for elements beginning at the supplied value.
                </p></li></ul></li><li><p><span class="code">RankedSet</span> add methods from <span class="code">SortedList</span> for indexing support:
            </p><ul><li><p>
                  Adds the method <span class="code">IndexOf(item)</span> that returns the position of the supplied item.
                </p></li><li><p>
                  Adds the method <span class="code">RemoveAt(item)</span> that deletes the item at the supplied position.
                </p></li></ul></li><li><p><span class="code">RankedDictionary</span> adds the method <span class="code">TryGetValueAndIndex(key,value,index)</span> that
              retrieves the key's associated value and index in one call.
            </p></li><li><p>
              The <span class="code">SortedSet</span> method
              <a href="http://msdn2.microsoft.com/en-us/library/dd381801" target="_blank">GetViewBetween</a>
              (which provides a virtual view to a range of a <span class="code">SortedSet</span>)
              is not implemented by <span class="code">RankedSet</span>.
              Use the <span class="code">ElementsBetween(lower,upper)</span> enumerator instead.
            </p></li><li><p>
              There are a few error conditions that result in different exceptions being thrown.
            </p></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Data structure</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          The data structure used by <span class="code">RankedDictionary</span> and <span class="code">RankedSet</span> is an order statistic B+ tree variant.
          An order statistic tree adds two capabilities to a tree:
        </p><ul><li><p>Select(<em>i</em>) — find the <em>i</em>'th smallest element in the tree (i.e. retrieve key by index).</p></li><li><p>
              Rank(<em>x</em>) – find the rank of item <em>x</em> in the tree (i.e. retrieve index by key).
              The names of the classes in the KaosCollections library are derived from this operation.
            </p></li></ul><p><span class="code">RankedDictionary</span> and <span class="code">RankedSet</span> store all elements in leaves at the same depth.
          The leaf level is a sorted doubly linked list with head and tail pointers.
          The first key of every leaf (except the leftmost) is copied to one branch for subdividing.
          A tree with no elements is represented as an empty leaf.
        </p><p>
          This structure differs from a typical B+ tree in three ways:
        </p><ul><li><p>
              While the root may contain as few as two children, other rightmost branches may contain as few as one child.
              This variation optimizes for time and space when bulk loading of presorted data
              and improves seek performance for data near the end of the collection - both common operations.
              All other branches maintain at least 50% capacity usage following every add and remove operation.
            </p></li><li><p>
              The rightmost leaf may contain as few as one item.
              Again, this variation optimizes the structure for bulk loading of presorted data.
              All other leaves maintain at least 50% capacity usage following every add and remove operation.
            </p></li><li><p>
              Every branch tracks the number of elements (weight) in all of its descendent leaves.
              For example, the weight of the root is the total number of elements in every leaf.
            </p></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Distribution</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          This library is built as a .NET Standard project with multi-targeting.
          All targeted binaries are available in the distributed NuGet package.
          Current targets are:
        </p><ul><li><p>
              .NETStandard 1.0.
              Use this for any .NET Core application or any .NET Framework application at or above .NET 4.5.
            </p></li><li><p>
              Full .NET Framework 4.0.
              This target does not include <span class="code">IReadOnlyDictionary</span> or <span class="code">IReadOnlyCollection</span> implementation.
            </p></li><li><p>
              Full .NET Framework 3.5.
              This target does not include <span class="code">IReadOnlyDictionary</span>, <span class="code">IReadOnlyCollection</span> implementation.
              It does not derive from <span class="code">ISet</span> but does implement its members.
            </p></li></ul><p>
          Documentation is currently distributed as a MS-Help 1 (.CHM) file.
          Also, installing as a NuGet package will provide IntelliSense and object browser documentation.
        </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Build environment</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          Visual Studio 2017 Community Edition (or greater) is required to build the library.
          There is an additional dependency on Sandcastle Help File Builder for building documentation.
          Test is performed by MSTest.
        </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="90402bce-1f31-45f8-b0ea-0a73408bd45a.htm">Version History</a></div><div class="seeAlsoStyle"><a href="https://en.wikipedia.org/wiki/B%2Btree" title="B+ tree" target="_blank">wikipedia.org/wiki/B+tree</a></div><div class="seeAlsoStyle"><a href="https://en.wikipedia.org/wiki/Order_statistic_tree" title="Order statistic tree" target="_blank">wikipedia.org/wiki/Order_statistic_tree</a></div><div class="seeAlsoStyle"><a href="https://msdn.microsoft.com/en-us/library/system.collections.generic(v=vs.110).aspx" title="System.Collections.Generic Namespace" target="_blank">msdn.microsoft.com/en-us/library/system.collections.generic(v=vs.110).aspx</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>[v0.3.6] Copyright © 2009-2017 Kasey O. (github.com/kaosborn)</p></div></body></html>